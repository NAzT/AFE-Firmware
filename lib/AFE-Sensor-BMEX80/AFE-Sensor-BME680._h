/* AFE Firmware for smart home devices, Website: https://afe.smartnydom.pl/ */

#ifndef _AFE_Sensor_BME680_h
#define _AFE_Sensor_BME680_h

#if defined(ARDUINO) && ARDUINO >= 100
#include "arduino.h"
#else
#include "WProgram.h"
#endif

#include <AFE-BMEX80-Sensor-Structure.h>
#include <AFE-I2C-Structure.h>
#include <EEPROM.h>
#include <Wire.h>
#include <bsec_integration.h>

//#include <bsec.h>

//#include <bsec_serialized_configurations_iaq.h>

// const uint8_t bsec_config_iaq[] = {
//#include "config/generic_33v_3s_4d/bsec_iaq.csv"
//};

//#define STATE_SAVE_PERIOD  UINT32_C(360 * 60 * 1000) // 360 minutes - 4 times
// a day

#ifdef DEBUG
#include <Streaming.h>
#endif

class AFESensorBME680 {

private:
  // Bsec Bme;

  // void loadState(void);
  // void updateState(void);

  // uint8_t bsecState[BSEC_MAX_STATE_BLOB_SIZE] = {0};
  // uint16_t stateUpdateCounter = 0;



public:
  BMEX80 *configuration;
  static BMEX80_DATA data;

  /* Constructor: entry parameter is GPIO number where Sensor is connected to */
  AFESensorBME680();

  boolean begin(BMEX80 *, I2CPORT *);

  boolean read();

  static uint32_t config_load(uint8_t *config_buffer, uint32_t n_buffer);
  static void state_save(const uint8_t *state_buffer, uint32_t length);
  static uint32_t state_load(uint8_t *state_buffer, uint32_t n_buffer);
  static void output_ready(int64_t timestamp, float iaq, uint8_t iaq_accuracy,
                    float temperature, float humidity, float pressure,
                    float raw_temperature, float raw_humidity, float gas,
                    bsec_library_return_t bsec_status);
  static void sleep(uint32_t t_ms);
  static int64_t get_timestamp_us();
  static int8_t bus_read(uint8_t dev_addr, uint8_t reg_addr, uint8_t *reg_data_ptr,
                  uint16_t data_len);
  static int8_t bus_write(uint8_t dev_addr, uint8_t reg_addr, uint8_t *reg_data_ptr,
                   uint16_t data_len);


#ifdef DEBUG
//  void checkBmeStatus();
#endif
};

#endif
